﻿
// Generated by ProtocolBuffer
// - a pure c# code generation implementation of protocol buffers
// Report bugs to: https://silentorbit.com/protobuf/

// DO NOT EDIT
// This file will be overwritten when CodeGenerator is run.
// To make custom modifications, edit the .proto file and add //:external before the message line
// then write the code and the changes in a separate file.

using System;
using System.IO;
using System.Text;
using System.Collections.Generic;

using SilentOrbit.ProtocolBuffers;
using static SilentOrbit.ProtocolBuffers.ProtocolParser;

// This is the backend code for reading and writing
namespace Google.Protobuf;

public partial class DescriptorProto
{
    /// <summary>Helper: create a new instance to deserializing into</summary>
    public static DescriptorProto Deserialize(Stream stream)
    {
        var instance = new DescriptorProto();
        Deserialize(stream, instance);
        return instance;
    }

    /// <summary>Helper: create a new instance to deserializing into</summary>
    public static DescriptorProto DeserializeLengthDelimited(Stream stream)
    {
        var instance = new DescriptorProto();
        DeserializeLengthDelimited(stream, instance);
        return instance;
    }

    /// <summary>Helper: create a new instance to deserializing into</summary>
    public static DescriptorProto DeserializeLength(Stream stream, int length)
    {
        var instance = new DescriptorProto();
        DeserializeLength(stream, length, instance);
        return instance;
    }

    /// <summary>Helper: put the buffer into a MemoryStream and create a new instance to deserializing into</summary>
    public static DescriptorProto Deserialize(byte[] buffer)
    {
        var instance = new DescriptorProto();
        using (var ms = new MemoryStream(buffer))
            Deserialize(ms, instance);
        return instance;
    }

    /// <summary>Helper: put the buffer into a MemoryStream before deserializing</summary>
    public static global::Google.Protobuf.DescriptorProto Deserialize(byte[] buffer, global::Google.Protobuf.DescriptorProto instance)
    {
        using (var ms = new MemoryStream(buffer))
            Deserialize(ms, instance);
        return instance;
    }

    /// <summary>Takes the remaining content of the stream and deserialze it into the instance.</summary>
    public static global::Google.Protobuf.DescriptorProto Deserialize(Stream stream, global::Google.Protobuf.DescriptorProto instance)
    {
        if (instance.Field == null)
            instance.Field = new List<global::Google.Protobuf.FieldDescriptorProto>();
        if (instance.Extension == null)
            instance.Extension = new List<global::Google.Protobuf.FieldDescriptorProto>();
        if (instance.NestedType == null)
            instance.NestedType = new List<global::Google.Protobuf.DescriptorProto>();
        if (instance.EnumType == null)
            instance.EnumType = new List<global::Google.Protobuf.EnumDescriptorProto>();
        if (instance.ExtensionRangeField == null)
            instance.ExtensionRangeField = new List<global::Google.Protobuf.DescriptorProto.ExtensionRange>();
        while (true)
        {
            int keyByte = stream.ReadByte();
            if (keyByte == -1)
                break;
            // Optimized reading of known fields with field ID < 16
            switch (keyByte)
            {
                // Field 1 LengthDelimited
                case 10:
                    instance.Name = ReadString(stream);
                    continue;
                // Field 2 LengthDelimited
                case 18:
                    // repeated
                    instance.Field.Add(global::Google.Protobuf.FieldDescriptorProto.DeserializeLengthDelimited(stream));
                    continue;
                // Field 6 LengthDelimited
                case 50:
                    // repeated
                    instance.Extension.Add(global::Google.Protobuf.FieldDescriptorProto.DeserializeLengthDelimited(stream));
                    continue;
                // Field 3 LengthDelimited
                case 26:
                    // repeated
                    instance.NestedType.Add(global::Google.Protobuf.DescriptorProto.DeserializeLengthDelimited(stream));
                    continue;
                // Field 4 LengthDelimited
                case 34:
                    // repeated
                    instance.EnumType.Add(global::Google.Protobuf.EnumDescriptorProto.DeserializeLengthDelimited(stream));
                    continue;
                // Field 5 LengthDelimited
                case 42:
                    // repeated
                    instance.ExtensionRangeField.Add(global::Google.Protobuf.DescriptorProto.ExtensionRange.DeserializeLengthDelimited(stream));
                    continue;
                // Field 7 LengthDelimited
                case 58:
                    if (instance.Options == null)
                        instance.Options = global::Google.Protobuf.MessageOptions.DeserializeLengthDelimited(stream);
                    else
                        global::Google.Protobuf.MessageOptions.DeserializeLengthDelimited(stream, instance.Options);
                    continue;
            }

            var key = ReadKey((byte)keyByte, stream);

            // Reading field ID > 16 and unknown field ID/wire type combinations
            switch (key.Field)
            {
                case 0:
                    throw new ProtocolBufferException("Invalid field id: 0, something went wrong in the stream");
                default:
                    SkipKey(stream, key);
                    break;
            }
        }

        return instance;
    }

    /// <summary>Read the VarInt length prefix and the given number of bytes from the stream and deserialze it into the instance.</summary>
    public static global::Google.Protobuf.DescriptorProto DeserializeLengthDelimited(Stream stream, global::Google.Protobuf.DescriptorProto instance)
    {
        if (instance.Field == null)
            instance.Field = new List<global::Google.Protobuf.FieldDescriptorProto>();
        if (instance.Extension == null)
            instance.Extension = new List<global::Google.Protobuf.FieldDescriptorProto>();
        if (instance.NestedType == null)
            instance.NestedType = new List<global::Google.Protobuf.DescriptorProto>();
        if (instance.EnumType == null)
            instance.EnumType = new List<global::Google.Protobuf.EnumDescriptorProto>();
        if (instance.ExtensionRangeField == null)
            instance.ExtensionRangeField = new List<global::Google.Protobuf.DescriptorProto.ExtensionRange>();
        long limit = ReadUInt32(stream);
        limit += stream.Position;
        while (true)
        {
            if (stream.Position >= limit)
            {
                if (stream.Position == limit)
                    break;
                else
                    throw new ProtocolBufferException("Read past max limit");
            }
            int keyByte = stream.ReadByte();
            if (keyByte == -1)
                throw new System.IO.EndOfStreamException();
            // Optimized reading of known fields with field ID < 16
            switch (keyByte)
            {
                // Field 1 LengthDelimited
                case 10:
                    instance.Name = ReadString(stream);
                    continue;
                // Field 2 LengthDelimited
                case 18:
                    // repeated
                    instance.Field.Add(global::Google.Protobuf.FieldDescriptorProto.DeserializeLengthDelimited(stream));
                    continue;
                // Field 6 LengthDelimited
                case 50:
                    // repeated
                    instance.Extension.Add(global::Google.Protobuf.FieldDescriptorProto.DeserializeLengthDelimited(stream));
                    continue;
                // Field 3 LengthDelimited
                case 26:
                    // repeated
                    instance.NestedType.Add(global::Google.Protobuf.DescriptorProto.DeserializeLengthDelimited(stream));
                    continue;
                // Field 4 LengthDelimited
                case 34:
                    // repeated
                    instance.EnumType.Add(global::Google.Protobuf.EnumDescriptorProto.DeserializeLengthDelimited(stream));
                    continue;
                // Field 5 LengthDelimited
                case 42:
                    // repeated
                    instance.ExtensionRangeField.Add(global::Google.Protobuf.DescriptorProto.ExtensionRange.DeserializeLengthDelimited(stream));
                    continue;
                // Field 7 LengthDelimited
                case 58:
                    if (instance.Options == null)
                        instance.Options = global::Google.Protobuf.MessageOptions.DeserializeLengthDelimited(stream);
                    else
                        global::Google.Protobuf.MessageOptions.DeserializeLengthDelimited(stream, instance.Options);
                    continue;
            }

            var key = ReadKey((byte)keyByte, stream);

            // Reading field ID > 16 and unknown field ID/wire type combinations
            switch (key.Field)
            {
                case 0:
                    throw new ProtocolBufferException("Invalid field id: 0, something went wrong in the stream");
                default:
                    SkipKey(stream, key);
                    break;
            }
        }

        return instance;
    }

    /// <summary>Read the given number of bytes from the stream and deserialze it into the instance.</summary>
    public static global::Google.Protobuf.DescriptorProto DeserializeLength(Stream stream, int length, global::Google.Protobuf.DescriptorProto instance)
    {
        if (instance.Field == null)
            instance.Field = new List<global::Google.Protobuf.FieldDescriptorProto>();
        if (instance.Extension == null)
            instance.Extension = new List<global::Google.Protobuf.FieldDescriptorProto>();
        if (instance.NestedType == null)
            instance.NestedType = new List<global::Google.Protobuf.DescriptorProto>();
        if (instance.EnumType == null)
            instance.EnumType = new List<global::Google.Protobuf.EnumDescriptorProto>();
        if (instance.ExtensionRangeField == null)
            instance.ExtensionRangeField = new List<global::Google.Protobuf.DescriptorProto.ExtensionRange>();
        long limit = stream.Position + length;
        while (true)
        {
            if (stream.Position >= limit)
            {
                if (stream.Position == limit)
                    break;
                else
                    throw new ProtocolBufferException("Read past max limit");
            }
            int keyByte = stream.ReadByte();
            if (keyByte == -1)
                throw new System.IO.EndOfStreamException();
            // Optimized reading of known fields with field ID < 16
            switch (keyByte)
            {
                // Field 1 LengthDelimited
                case 10:
                    instance.Name = ReadString(stream);
                    continue;
                // Field 2 LengthDelimited
                case 18:
                    // repeated
                    instance.Field.Add(global::Google.Protobuf.FieldDescriptorProto.DeserializeLengthDelimited(stream));
                    continue;
                // Field 6 LengthDelimited
                case 50:
                    // repeated
                    instance.Extension.Add(global::Google.Protobuf.FieldDescriptorProto.DeserializeLengthDelimited(stream));
                    continue;
                // Field 3 LengthDelimited
                case 26:
                    // repeated
                    instance.NestedType.Add(global::Google.Protobuf.DescriptorProto.DeserializeLengthDelimited(stream));
                    continue;
                // Field 4 LengthDelimited
                case 34:
                    // repeated
                    instance.EnumType.Add(global::Google.Protobuf.EnumDescriptorProto.DeserializeLengthDelimited(stream));
                    continue;
                // Field 5 LengthDelimited
                case 42:
                    // repeated
                    instance.ExtensionRangeField.Add(global::Google.Protobuf.DescriptorProto.ExtensionRange.DeserializeLengthDelimited(stream));
                    continue;
                // Field 7 LengthDelimited
                case 58:
                    if (instance.Options == null)
                        instance.Options = global::Google.Protobuf.MessageOptions.DeserializeLengthDelimited(stream);
                    else
                        global::Google.Protobuf.MessageOptions.DeserializeLengthDelimited(stream, instance.Options);
                    continue;
            }

            var key = ReadKey((byte)keyByte, stream);

            // Reading field ID > 16 and unknown field ID/wire type combinations
            switch (key.Field)
            {
                case 0:
                    throw new ProtocolBufferException("Invalid field id: 0, something went wrong in the stream");
                default:
                    SkipKey(stream, key);
                    break;
            }
        }

        return instance;
    }

    /// <summary>Serialize the instance into the stream</summary>
    public static void Serialize(Stream stream, DescriptorProto instance)
    {
        using (var msField = new MemoryStream())
        {
            if (instance.Name != null)
            {
                // Key for field: 1, LengthDelimited
                stream.WriteByte(10);
                WriteBytes(stream, Encoding.UTF8.GetBytes(instance.Name));
            }
            if (instance.Field != null)
            {
                foreach (var i2 in instance.Field)
                {
                    // Key for field: 2, LengthDelimited
                    stream.WriteByte(18);
                    ﻿msField.SetLength(0);
                    global::Google.Protobuf.FieldDescriptorProto.Serialize(msField, i2);
                    // Length delimited byte array
                    uint length2 = (uint)msField.Length;
                    WriteUInt32(stream, length2);
                    msField.WriteTo(stream);

                }
            }
            if (instance.Extension != null)
            {
                foreach (var i6 in instance.Extension)
                {
                    // Key for field: 6, LengthDelimited
                    stream.WriteByte(50);
                    ﻿msField.SetLength(0);
                    global::Google.Protobuf.FieldDescriptorProto.Serialize(msField, i6);
                    // Length delimited byte array
                    uint length6 = (uint)msField.Length;
                    WriteUInt32(stream, length6);
                    msField.WriteTo(stream);

                }
            }
            if (instance.NestedType != null)
            {
                foreach (var i3 in instance.NestedType)
                {
                    // Key for field: 3, LengthDelimited
                    stream.WriteByte(26);
                    ﻿msField.SetLength(0);
                    global::Google.Protobuf.DescriptorProto.Serialize(msField, i3);
                    // Length delimited byte array
                    uint length3 = (uint)msField.Length;
                    WriteUInt32(stream, length3);
                    msField.WriteTo(stream);

                }
            }
            if (instance.EnumType != null)
            {
                foreach (var i4 in instance.EnumType)
                {
                    // Key for field: 4, LengthDelimited
                    stream.WriteByte(34);
                    ﻿msField.SetLength(0);
                    global::Google.Protobuf.EnumDescriptorProto.Serialize(msField, i4);
                    // Length delimited byte array
                    uint length4 = (uint)msField.Length;
                    WriteUInt32(stream, length4);
                    msField.WriteTo(stream);

                }
            }
            if (instance.ExtensionRangeField != null)
            {
                foreach (var i5 in instance.ExtensionRangeField)
                {
                    // Key for field: 5, LengthDelimited
                    stream.WriteByte(42);
                    ﻿msField.SetLength(0);
                    global::Google.Protobuf.DescriptorProto.ExtensionRange.Serialize(msField, i5);
                    // Length delimited byte array
                    uint length5 = (uint)msField.Length;
                    WriteUInt32(stream, length5);
                    msField.WriteTo(stream);

                }
            }
            if (instance.Options != null)
            {
                // Key for field: 7, LengthDelimited
                stream.WriteByte(58);
                ﻿msField.SetLength(0);
                global::Google.Protobuf.MessageOptions.Serialize(msField, instance.Options);
                // Length delimited byte array
                uint length7 = (uint)msField.Length;
                WriteUInt32(stream, length7);
                msField.WriteTo(stream);

            }
        }
    }

    /// <summary>Helper: Serialize into a MemoryStream and return its byte array</summary>
    public static byte[] SerializeToBytes(DescriptorProto instance)
    {
        using (var ms = new MemoryStream())
        {
            Serialize(ms, instance);
            return ms.ToArray();
        }
    }
    /// <summary>Helper: Serialize with a varint length prefix</summary>
    public static void SerializeLengthDelimited(Stream stream, DescriptorProto instance)
    {
        var data = SerializeToBytes(instance);
        WriteUInt32(stream, (uint)data.Length);
        stream.Write(data, 0, data.Length);
    }

    public partial class ExtensionRange
    {
        /// <summary>Helper: create a new instance to deserializing into</summary>
        public static ExtensionRange Deserialize(Stream stream)
        {
            var instance = new ExtensionRange();
            Deserialize(stream, instance);
            return instance;
        }

        /// <summary>Helper: create a new instance to deserializing into</summary>
        public static ExtensionRange DeserializeLengthDelimited(Stream stream)
        {
            var instance = new ExtensionRange();
            DeserializeLengthDelimited(stream, instance);
            return instance;
        }

        /// <summary>Helper: create a new instance to deserializing into</summary>
        public static ExtensionRange DeserializeLength(Stream stream, int length)
        {
            var instance = new ExtensionRange();
            DeserializeLength(stream, length, instance);
            return instance;
        }

        /// <summary>Helper: put the buffer into a MemoryStream and create a new instance to deserializing into</summary>
        public static ExtensionRange Deserialize(byte[] buffer)
        {
            var instance = new ExtensionRange();
            using (var ms = new MemoryStream(buffer))
                Deserialize(ms, instance);
            return instance;
        }

        /// <summary>Helper: put the buffer into a MemoryStream before deserializing</summary>
        public static global::Google.Protobuf.DescriptorProto.ExtensionRange Deserialize(byte[] buffer, global::Google.Protobuf.DescriptorProto.ExtensionRange instance)
        {
            using (var ms = new MemoryStream(buffer))
                Deserialize(ms, instance);
            return instance;
        }

        /// <summary>Takes the remaining content of the stream and deserialze it into the instance.</summary>
        public static global::Google.Protobuf.DescriptorProto.ExtensionRange Deserialize(Stream stream, global::Google.Protobuf.DescriptorProto.ExtensionRange instance)
        {
            while (true)
            {
                int keyByte = stream.ReadByte();
                if (keyByte == -1)
                    break;
                // Optimized reading of known fields with field ID < 16
                switch (keyByte)
                {
                    // Field 1 Varint
                    case 8:
                        instance.Start = (int)ReadUInt64(stream);
                        continue;
                    // Field 2 Varint
                    case 16:
                        instance.End = (int)ReadUInt64(stream);
                        continue;
                }

                var key = ReadKey((byte)keyByte, stream);

                // Reading field ID > 16 and unknown field ID/wire type combinations
                switch (key.Field)
                {
                    case 0:
                        throw new ProtocolBufferException("Invalid field id: 0, something went wrong in the stream");
                    default:
                        SkipKey(stream, key);
                        break;
                }
            }

            return instance;
        }

        /// <summary>Read the VarInt length prefix and the given number of bytes from the stream and deserialze it into the instance.</summary>
        public static global::Google.Protobuf.DescriptorProto.ExtensionRange DeserializeLengthDelimited(Stream stream, global::Google.Protobuf.DescriptorProto.ExtensionRange instance)
        {
            long limit = ReadUInt32(stream);
            limit += stream.Position;
            while (true)
            {
                if (stream.Position >= limit)
                {
                    if (stream.Position == limit)
                        break;
                    else
                        throw new ProtocolBufferException("Read past max limit");
                }
                int keyByte = stream.ReadByte();
                if (keyByte == -1)
                    throw new System.IO.EndOfStreamException();
                // Optimized reading of known fields with field ID < 16
                switch (keyByte)
                {
                    // Field 1 Varint
                    case 8:
                        instance.Start = (int)ReadUInt64(stream);
                        continue;
                    // Field 2 Varint
                    case 16:
                        instance.End = (int)ReadUInt64(stream);
                        continue;
                }

                var key = ReadKey((byte)keyByte, stream);

                // Reading field ID > 16 and unknown field ID/wire type combinations
                switch (key.Field)
                {
                    case 0:
                        throw new ProtocolBufferException("Invalid field id: 0, something went wrong in the stream");
                    default:
                        SkipKey(stream, key);
                        break;
                }
            }

            return instance;
        }

        /// <summary>Read the given number of bytes from the stream and deserialze it into the instance.</summary>
        public static global::Google.Protobuf.DescriptorProto.ExtensionRange DeserializeLength(Stream stream, int length, global::Google.Protobuf.DescriptorProto.ExtensionRange instance)
        {
            long limit = stream.Position + length;
            while (true)
            {
                if (stream.Position >= limit)
                {
                    if (stream.Position == limit)
                        break;
                    else
                        throw new ProtocolBufferException("Read past max limit");
                }
                int keyByte = stream.ReadByte();
                if (keyByte == -1)
                    throw new System.IO.EndOfStreamException();
                // Optimized reading of known fields with field ID < 16
                switch (keyByte)
                {
                    // Field 1 Varint
                    case 8:
                        instance.Start = (int)ReadUInt64(stream);
                        continue;
                    // Field 2 Varint
                    case 16:
                        instance.End = (int)ReadUInt64(stream);
                        continue;
                }

                var key = ReadKey((byte)keyByte, stream);

                // Reading field ID > 16 and unknown field ID/wire type combinations
                switch (key.Field)
                {
                    case 0:
                        throw new ProtocolBufferException("Invalid field id: 0, something went wrong in the stream");
                    default:
                        SkipKey(stream, key);
                        break;
                }
            }

            return instance;
        }

        /// <summary>Serialize the instance into the stream</summary>
        public static void Serialize(Stream stream, ExtensionRange instance)
        {
            using (var msField = new MemoryStream())
            {
                // Key for field: 1, Varint
                stream.WriteByte(8);
                WriteUInt64(stream,(ulong)instance.Start);
                // Key for field: 2, Varint
                stream.WriteByte(16);
                WriteUInt64(stream,(ulong)instance.End);
            }
        }

        /// <summary>Helper: Serialize into a MemoryStream and return its byte array</summary>
        public static byte[] SerializeToBytes(ExtensionRange instance)
        {
            using (var ms = new MemoryStream())
            {
                Serialize(ms, instance);
                return ms.ToArray();
            }
        }
        /// <summary>Helper: Serialize with a varint length prefix</summary>
        public static void SerializeLengthDelimited(Stream stream, ExtensionRange instance)
        {
            var data = SerializeToBytes(instance);
            WriteUInt32(stream, (uint)data.Length);
            stream.Write(data, 0, data.Length);
        }
    }

}

